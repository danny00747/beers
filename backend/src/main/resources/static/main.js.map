{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-material.module.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/auth/auth-guard.service.ts","./src/app/auth/auth-http-interceptor.ts","./src/app/auth/auth.custom.service.ts","./src/app/auth/auth.enum.ts","./src/app/auth/auth.factory.ts","./src/app/auth/auth.firebase.service.ts","./src/app/auth/auth.inmemory.service.ts","./src/app/auth/auth.service.ts","./src/app/auth/cache.service.ts","./src/app/common/common.ts","./src/app/common/simple-dialog.component.ts","./src/app/common/ui.service.ts","./src/app/common/validations.ts","./src/app/entity-metadata.ts","./src/app/home/home.component.ts","./src/app/login/login.component.ts","./src/app/navigation-menu/navigation-menu.component.ts","./src/app/page-not-found/page-not-found.component.ts","./src/app/user-controls/field-error/field-error.directive.ts","./src/app/user-controls/field-error/field-error.module.ts","./src/app/user/user/user.ts","./src/environments/environment.ts","./src/main.ts","webpack:///./src/app/navigation-menu/navigation-menu.component.ts?1d24","webpack:///./src/app/app.component.ts?2d18","webpack:///./src/app/login/login.component.ts?a128","webpack:///./src/app/login/login.component.ts?8676","./src/app/login/login.component.html"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core'\nimport { MatButtonModule } from '@angular/material/button'\nimport { MatCardModule } from '@angular/material/card'\nimport { MatDialogModule } from '@angular/material/dialog'\nimport { MatExpansionModule } from '@angular/material/expansion'\nimport { MatFormFieldModule } from '@angular/material/form-field'\nimport { MatGridListModule } from '@angular/material/grid-list'\nimport { MatIconModule } from '@angular/material/icon'\nimport { MatInputModule } from '@angular/material/input'\nimport { MatListModule } from '@angular/material/list'\nimport { MatSidenavModule } from '@angular/material/sidenav'\nimport { MatSnackBarModule } from '@angular/material/snack-bar'\nimport { MatToolbarModule } from '@angular/material/toolbar'\nimport { MatTooltipModule } from '@angular/material/tooltip'\n\nconst modules = [\n  MatButtonModule,\n  MatToolbarModule,\n  MatIconModule,\n  MatCardModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatTooltipModule,\n  MatSidenavModule,\n  MatListModule,\n  MatDialogModule,\n  MatSnackBarModule,\n  MatExpansionModule,\n  MatGridListModule,\n] as any[]\n\n@NgModule({\n  exports: modules,\n})\nexport class AppMaterialModule {}\n","import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nimport { AuthGuard } from './auth/auth-guard.service'\nimport { HomeComponent } from './home/home.component'\nimport { LoginComponent } from './login/login.component'\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component'\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n  { path: 'home', component: HomeComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'login/:redirectUrl', component: LoginComponent },\n  {\n    path: 'manager',\n    loadChildren: () => import('./manager/manager.module').then((m) => m.ManagerModule),\n    canLoad: [AuthGuard],\n  },\n  {\n    path: 'user',\n    loadChildren: () => import('./user/user.module').then((m) => m.UserModule),\n  },\n  {\n    path: 'pos',\n    loadChildren: () => import('./pos/pos.module').then((m) => m.PosModule),\n  },\n  {\n    path: 'inventory',\n    loadChildren: () =>\n      import('./inventory/inventory.module').then((m) => m.InventoryModule),\n  },\n  { path: '**', component: PageNotFoundComponent },\n]\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core'\nimport { MediaObserver } from '@angular/flex-layout'\nimport { MatIconRegistry } from '@angular/material/icon'\nimport { DomSanitizer } from '@angular/platform-browser'\nimport { combineLatest } from 'rxjs'\nimport { tap } from 'rxjs/operators'\nimport { SubSink } from 'subsink'\n\nimport { AuthService } from './auth/auth.service'\n\n@Component({\n  selector: 'app-root',\n  styles: [\n    `\n      .app-container {\n        display: flex;\n        flex-direction: column;\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n      }\n      .app-is-mobile .app-toolbar {\n        position: fixed;\n        z-index: 2;\n      }\n      .app-sidenav-container {\n        flex: 1;\n      }\n      .app-is-mobile .app-sidenav-container {\n        flex: 1 0 auto;\n      }\n      mat-sidenav {\n        width: 200px;\n      }\n      .image-cropper {\n        width: 40px;\n        height: 40px;\n        position: relative;\n        overflow: hidden;\n        border-radius: 50%;\n        margin-top: -8px;\n      }\n    `,\n  ],\n  // prettier-ignore\n  template: `\n    <div class=\"app-container\">\n      <mat-toolbar color=\"primary\" fxLayoutGap=\"8px\" class=\"app-toolbar\" [class.app-is-mobile]=\"media.isActive('xs')\"\n        *ngIf=\"{\n          status: authService.authStatus$ | async,\n          user: authService.currentUser$ | async\n        } as auth;\">\n        <button *ngIf=\"auth?.status?.isAuthenticated\" mat-icon-button (click)=\"sidenav.toggle()\">\n          <mat-icon>menu</mat-icon>\n        </button>\n        <a mat-icon-button routerLink=\"/home\">\n          <mat-icon svgIcon=\"lemon\"></mat-icon>\n          <span class=\"mat-h2\">LemonMart</span>\n        </a>\n        <span class=\"flex-spacer\"></span>\n        <button *ngIf=\"auth?.status?.isAuthenticated\" mat-mini-fab routerLink=\"/user/profile\" matTooltip=\"Profile\"\n          aria-label=\"User Profile\">\n          <img *ngIf=\"auth?.user?.picture\" class=\"image-cropper\" [src]=\"auth?.user?.picture\" />\n          <mat-icon *ngIf=\"!auth?.user?.picture\">account_circle</mat-icon>\n        </button>\n        <button *ngIf=\"auth?.status?.isAuthenticated\" mat-mini-fab routerLink=\"/user/logout\" matTooltip=\"Logout\"\n          aria-label=\"Logout\">\n          <mat-icon>lock_open</mat-icon>\n        </button>\n      </mat-toolbar>\n      <mat-sidenav-container class=\"app-sidenav-container\">\n        <mat-sidenav #sidenav [mode]=\"media.isActive('xs') ? 'over' : 'side'\" [fixedInViewport]=\"media.isActive('xs')\" _\n          fixedTopGap=\"56\" [(opened)]=\"opened\">\n          <app-navigation-menu></app-navigation-menu>\n        </mat-sidenav>\n        <mat-sidenav-content>\n          <router-outlet></router-outlet>\n        </mat-sidenav-content>\n      </mat-sidenav-container>\n    </div>\n  `,\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  private subs = new SubSink()\n  opened!: boolean\n\n  constructor(\n    iconRegistry: MatIconRegistry,\n    sanitizer: DomSanitizer,\n    public authService: AuthService,\n    public media: MediaObserver\n  ) {\n    iconRegistry.addSvgIcon(\n      'lemon',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/img/icons/lemon.svg')\n    )\n  }\n\n  ngOnInit() {\n    this.subs.sink = combineLatest([\n      this.media.asObservable(),\n      this.authService.authStatus$,\n    ])\n      .pipe(\n        tap(([mediaValue, authStatus]) => {\n          if (!authStatus?.isAuthenticated) {\n            this.opened = false\n          } else {\n            if (mediaValue[0].mqAlias === 'xs') {\n              this.opened = false\n            } else {\n              this.opened = true\n            }\n          }\n        })\n      )\n      .subscribe()\n  }\n\n  ngOnDestroy() {\n    this.subs.unsubscribe()\n  }\n}\n","import { HTTP_INTERCEPTORS, HttpClient, HttpClientModule } from '@angular/common/http'\nimport { NgModule } from '@angular/core'\nimport { AngularFireModule } from '@angular/fire'\nimport { AngularFireAuth, AngularFireAuthModule } from '@angular/fire/auth'\nimport { FlexLayoutModule } from '@angular/flex-layout'\nimport { ReactiveFormsModule } from '@angular/forms'\nimport { BrowserModule } from '@angular/platform-browser'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { EntityDataModule } from '@ngrx/data'\nimport { EffectsModule } from '@ngrx/effects'\nimport { StoreModule } from '@ngrx/store'\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools'\nimport { IConfig, NgxMaskModule } from 'ngx-mask'\n\nimport { environment } from '../environments/environment'\nimport { AppMaterialModule } from './app-material.module'\nimport { AppRoutingModule } from './app-routing.module'\nimport { AppComponent } from './app.component'\nimport { AuthHttpInterceptor } from './auth/auth-http-interceptor'\nimport { authFactory } from './auth/auth.factory'\nimport { AuthService } from './auth/auth.service'\nimport { SimpleDialogComponent } from './common/simple-dialog.component'\nimport { entityConfig } from './entity-metadata'\nimport { HomeComponent } from './home/home.component'\nimport { LoginComponent } from './login/login.component'\nimport { NavigationMenuComponent } from './navigation-menu/navigation-menu.component'\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component'\nimport { FieldErrorModule } from './user-controls/field-error/field-error.module'\n\nexport const options: Partial<IConfig> | (() => Partial<IConfig>) = {\n  showMaskTyped: true,\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    PageNotFoundComponent,\n    LoginComponent,\n    NavigationMenuComponent,\n    SimpleDialogComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AppMaterialModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    FieldErrorModule,\n    NgxMaskModule.forRoot(options),\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAuthModule,\n    StoreModule.forRoot({}),\n    EffectsModule.forRoot([]),\n    EntityDataModule.forRoot(entityConfig),\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production }),\n  ],\n  providers: [\n    {\n      provide: AuthService,\n      useFactory: authFactory,\n      deps: [AngularFireAuth, HttpClient],\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthHttpInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [SimpleDialogComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core'\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  CanActivateChild,\n  CanLoad,\n  Route,\n  Router,\n  RouterStateSnapshot,\n} from '@angular/router'\nimport { Observable } from 'rxjs'\nimport { map, take } from 'rxjs/operators'\n\nimport { UiService } from '../common/ui.service'\nimport { Role } from './auth.enum'\nimport { AuthService } from './auth.service'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate, CanActivateChild, CanLoad {\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    private uiService: UiService\n  ) {}\n\n  canLoad(route: Route): boolean | Observable<boolean> | Promise<boolean> {\n    return this.checkLogin()\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean | Observable<boolean> | Promise<boolean> {\n    return this.checkLogin(route)\n  }\n\n  canActivateChild(\n    childRoute: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean | Observable<boolean> | Promise<boolean> {\n    return this.checkLogin(childRoute)\n  }\n\n  protected checkLogin(route?: ActivatedRouteSnapshot): Observable<boolean> {\n    return this.authService.authStatus$.pipe(\n      map((authStatus) => {\n        console.log(authStatus, 'sssssssssssssssss')\n        const roleMatch = this.checkRoleMatch(authStatus.userRole, route)\n        const allowLogin = authStatus.isAuthenticated && roleMatch\n        if (!allowLogin) {\n          this.showAlert(authStatus.isAuthenticated, roleMatch)\n          this.router.navigate(['login'], {\n            queryParams: {\n              redirectUrl: this.getResolvedUrl(route),\n            },\n          })\n        }\n        return allowLogin\n      }),\n      take(1) // the observable must complete for the guard to work\n    )\n  }\n\n  private checkRoleMatch(role: Role, route?: ActivatedRouteSnapshot) {\n    if (!route?.data?.expectedRole) {\n      return true\n    }\n    return role === route.data.expectedRole\n  }\n\n  private showAlert(isAuth: boolean, roleMatch: boolean) {\n    if (!isAuth) {\n      this.uiService.showToast('You must login to continue')\n    }\n\n    if (!roleMatch) {\n      this.uiService.showToast('You do not have the permissions to view this resource')\n    }\n  }\n\n  getResolvedUrl(route?: ActivatedRouteSnapshot): string {\n    if (!route) {\n      return ''\n    }\n\n    return route.pathFromRoot\n      .map((r) => r.url.map((segment) => segment.toString()).join('/'))\n      .join('/')\n      .replace('//', '/')\n  }\n}\n","import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { Router } from '@angular/router'\nimport { Observable, throwError } from 'rxjs'\nimport { catchError } from 'rxjs/operators'\n\nimport { AuthService } from './auth.service'\n\n@Injectable()\nexport class AuthHttpInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService, private router: Router) {}\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const jwt = this.authService.getToken()\n    const authRequest = req.clone({ setHeaders: { authorization: `Bearer ${jwt}` } })\n    return next.handle(authRequest).pipe(\n      catchError((err, caught) => {\n        if (err.status === 401) {\n          this.router.navigate(['/login'], {\n            queryParams: { redirectUrl: this.router.routerState.snapshot.url },\n          })\n        }\n\n        return throwError(err)\n      })\n    )\n  }\n}\n","import { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { Observable } from 'rxjs'\nimport { catchError, map } from 'rxjs/operators'\nimport { $enum } from 'ts-enum-util'\n\nimport { environment } from '../../environments/environment'\nimport { transformError } from '../common/common'\nimport { IUser, User } from '../user/user/user'\nimport { Role } from './auth.enum'\nimport { AuthService, IAuthStatus, IServerAuthResponse } from './auth.service'\n\ninterface IJwtToken {\n  email: string\n  role: string\n  picture: string\n  iat: number\n  exp: number\n  sub: string\n}\n\n@Injectable()\nexport class CustomAuthService extends AuthService {\n  constructor(private httpClient: HttpClient) {\n    super()\n  }\n\n  protected authProvider(\n    email: string,\n    password: string\n  ): Observable<IServerAuthResponse> {\n    return this.httpClient.post<IServerAuthResponse>(\n      `${environment.baseUrl}/v1/auth/login`,\n      {\n        email,\n        password,\n      }\n    )\n  }\n\n  protected transformJwtToken(token: IJwtToken): IAuthStatus {\n    return {\n      isAuthenticated: !!token.email,\n      userId: token.sub,\n      userRole: $enum(Role).asValueOrDefault(token.role, Role.None),\n      userEmail: token.email,\n      userPicture: token.picture,\n      userPictures: token.picture,\n    } as IAuthStatus\n  }\n\n  protected getCurrentUser(): Observable<User> {\n    return this.httpClient\n      .get<IUser>(`${environment.baseUrl}/v1/auth/me`)\n      .pipe(map(User.Build, catchError(transformError)))\n  }\n}\n","export enum Role {\n  None = 'none',\n  Clerk = 'clerk',\n  Cashier = 'cashier',\n  Manager = 'manager',\n}\n\nexport enum AuthMode {\n  InMemory = 'In Memory',\n  CustomServer = 'Custom Server',\n  Firebase = 'Firebase',\n}\n","import { HttpClient } from '@angular/common/http'\nimport { AngularFireAuth } from '@angular/fire/auth'\n\nimport { environment } from '../../environments/environment'\nimport { CustomAuthService } from './auth.custom.service'\nimport { AuthMode } from './auth.enum'\nimport { FirebaseAuthService } from './auth.firebase.service'\nimport { InMemoryAuthService } from './auth.inmemory.service'\n\nexport function authFactory(afAuth: AngularFireAuth, httpClient: HttpClient) {\n  switch (environment.authMode) {\n    case AuthMode.InMemory:\n      return new InMemoryAuthService()\n    case AuthMode.CustomServer:\n      return new CustomAuthService(httpClient)\n    case AuthMode.Firebase:\n      return new FirebaseAuthService(afAuth)\n  }\n}\n","import 'firebase/auth'\n\nimport { Injectable } from '@angular/core'\nimport { AngularFireAuth } from '@angular/fire/auth'\nimport firebase from 'firebase/app'\nimport { Observable, Subject } from 'rxjs'\nimport { map } from 'rxjs/operators'\n\nimport { IUser, User } from '../user/user/user'\nimport { Role } from './auth.enum'\nimport {\n  AuthService,\n  IAuthStatus,\n  IServerAuthResponse,\n  defaultAuthStatus,\n} from './auth.service'\n\ninterface IJwtToken {\n  email: string\n  iat: number\n  exp: number\n  sub: string\n}\n\n@Injectable()\nexport class FirebaseAuthService extends AuthService {\n  constructor(private afAuth: AngularFireAuth) {\n    super()\n  }\n\n  protected authProvider(\n    email: string,\n    password: string\n  ): Observable<IServerAuthResponse> {\n    const serverResponse$ = new Subject<IServerAuthResponse>()\n\n    this.afAuth.signInWithEmailAndPassword(email, password).then(\n      (res) => {\n        const firebaseUser: firebase.User | null = res.user\n        firebaseUser?.getIdToken().then(\n          (token) => serverResponse$.next({ accessToken: token } as IServerAuthResponse),\n          (err) => serverResponse$.error(err)\n        )\n      },\n      (err) => serverResponse$.error(err)\n    )\n\n    return serverResponse$\n  }\n\n  protected transformJwtToken(token: IJwtToken): IAuthStatus {\n    if (!token) {\n      return defaultAuthStatus\n    }\n\n    return {\n      isAuthenticated: !!token.email,\n      userId: token.sub,\n      userRole: Role.Cashier,\n    }\n  }\n\n  protected getCurrentUser(): Observable<User> {\n    return this.afAuth.user.pipe(map(this.transformFirebaseUser))\n  }\n\n  private transformFirebaseUser(firebaseUser: firebase.User | null): User {\n    if (!firebaseUser) {\n      return new User()\n    }\n\n    return User.Build({\n      name: {\n        first: firebaseUser?.displayName?.split(' ')[0] || 'Firebase',\n        last: firebaseUser?.displayName?.split(' ')[1] || 'User',\n      },\n      picture: firebaseUser.photoURL,\n      email: firebaseUser.email,\n      _id: firebaseUser.uid,\n      role: Role.None,\n    } as IUser)\n  }\n\n  logout() {\n    if (this.afAuth) {\n      this.afAuth.signOut()\n    }\n    this.clearToken()\n    this.authStatus$.next(defaultAuthStatus)\n  }\n}\n","import { Injectable } from '@angular/core'\nimport { sign } from 'fake-jwt-sign' // For InMemoryAuthService only\nimport { Observable, of, throwError } from 'rxjs'\n\nimport { PhoneType, User } from '../user/user/user'\nimport { Role } from './auth.enum'\nimport { AuthService, IAuthStatus, IServerAuthResponse } from './auth.service'\n\n@Injectable()\nexport class InMemoryAuthService extends AuthService {\n  // LemonMart Server User Id: 5da01751da27cc462d265913\n  private defaultUser = User.Build({\n    _id: '5da01751da27cc462d265913',\n    email: 'duluca@gmail.com',\n    name: { first: 'Doguhan', last: 'Uluca' },\n    picture: 'https://secure.gravatar.com/avatar/7cbaa9afb5ca78d97f3c689f8ce6c985',\n    role: Role.Manager,\n    dateOfBirth: new Date(1980, 1, 1),\n    userStatus: true,\n    address: {\n      line1: '101 Sesame St.',\n      city: 'Bethesda',\n      state: 'Maryland',\n      zip: '20810',\n    },\n    level: 2,\n    phones: [\n      {\n        id: 0,\n        type: PhoneType.Mobile,\n        digits: '5555550717',\n      },\n    ],\n  })\n\n  constructor() {\n    super()\n    console.warn(\n      \"You're using the InMemoryAuthService. Do not use this service in production.\"\n    )\n  }\n\n  protected authProvider(\n    email: string,\n    password: string\n  ): Observable<IServerAuthResponse> {\n    email = email.toLowerCase()\n\n    if (!email.endsWith('@test.com')) {\n      return throwError('Failed to login! Email needs to end with @test.com.')\n    }\n\n    const authStatus = {\n      isAuthenticated: true,\n      userId: this.defaultUser._id,\n      userRole: email.includes('cashier')\n        ? Role.Cashier\n        : email.includes('clerk')\n        ? Role.Clerk\n        : email.includes('manager')\n        ? Role.Manager\n        : Role.None,\n    } as IAuthStatus\n\n    this.defaultUser.role = authStatus.userRole\n\n    const authResponse = {\n      accessToken: sign(authStatus, 'secret', {\n        expiresIn: '1h',\n        algorithm: 'none',\n      }),\n    } as IServerAuthResponse\n\n    return of(authResponse)\n  }\n\n  protected transformJwtToken(token: IAuthStatus): IAuthStatus {\n    return token\n  }\n\n  protected getCurrentUser(): Observable<User> {\n    return of(this.defaultUser)\n  }\n}\n","import { Injectable } from '@angular/core'\nimport decode from 'jwt-decode'\nimport { BehaviorSubject, Observable, pipe, throwError } from 'rxjs'\nimport { catchError, filter, map, mergeMap, tap } from 'rxjs/operators'\n\nimport { transformError } from '../common/common'\nimport { IUser, User } from '../user/user/user'\nimport { Role } from './auth.enum'\nimport { CacheService } from './cache.service'\n\nexport interface IAuthService {\n  readonly authStatus$: BehaviorSubject<IAuthStatus>\n  readonly currentUser$: BehaviorSubject<IUser>\n  login(email: string, password: string): Observable<void>\n  logout(clearToken?: boolean): void\n  getToken(): string\n}\n\nexport interface IAuthStatus {\n  isAuthenticated: boolean\n  userRole: Role\n  userId: string\n}\n\nexport interface IServerAuthResponse {\n  accessToken: string\n}\n\nexport const defaultAuthStatus: IAuthStatus = {\n  isAuthenticated: false,\n  userRole: Role.None,\n  userId: '',\n}\n\n@Injectable()\nexport abstract class AuthService extends CacheService implements IAuthService {\n  private getAndUpdateUserIfAuthenticated = pipe(\n    filter((status: IAuthStatus) => status.isAuthenticated),\n    mergeMap(() => this.getCurrentUser()),\n    map((user: IUser) => this.currentUser$.next(user)),\n    catchError(transformError)\n  )\n\n  readonly authStatus$ = new BehaviorSubject<IAuthStatus>(defaultAuthStatus)\n  readonly currentUser$ = new BehaviorSubject<IUser>(new User())\n  protected readonly resumeCurrentUser$ = this.authStatus$.pipe(\n    this.getAndUpdateUserIfAuthenticated\n  )\n\n  constructor() {\n    super()\n\n    if (this.hasExpiredToken()) {\n      this.logout(true)\n    } else {\n      this.authStatus$.next(this.getAuthStatusFromToken())\n      // To load user on browser refresh, resume pipeline must activate on the next cycle\n      // Which allows for all services to constructed properly\n      setTimeout(() => this.resumeCurrentUser$.subscribe(), 0)\n    }\n  }\n\n  protected abstract authProvider(\n    email: string,\n    password: string\n  ): Observable<IServerAuthResponse>\n\n  protected abstract transformJwtToken(token: unknown): IAuthStatus\n\n  protected abstract getCurrentUser(): Observable<User>\n\n  login(email: string, password: string): Observable<void> {\n    this.clearToken()\n\n    const loginResponse$ = this.authProvider(email, password).pipe(\n      map((value) => {\n        console.log(value)\n        this.setToken(value.accessToken)\n        const token = decode(value.accessToken)\n        return this.transformJwtToken(token)\n      }),\n      tap((status) => this.authStatus$.next(status)),\n      this.getAndUpdateUserIfAuthenticated\n    )\n\n    loginResponse$.subscribe({\n      error: (err) => {\n        this.logout()\n        return throwError(err)\n      },\n    })\n\n    return loginResponse$\n  }\n\n  logout(clearToken?: boolean) {\n    if (clearToken) {\n      this.clearToken()\n    }\n    setTimeout(() => this.authStatus$.next(defaultAuthStatus), 0)\n  }\n\n  protected setToken(jwt: string) {\n    this.setItem('jwt', jwt)\n  }\n\n  getToken(): string {\n    return this.getItem('jwt') ?? ''\n  }\n\n  protected clearToken() {\n    this.removeItem('jwt')\n  }\n\n  protected hasExpiredToken(): boolean {\n    const jwt = this.getToken()\n\n    if (jwt) {\n      const payload = decode(jwt) as any\n      return Date.now() >= payload.exp * 1000\n    }\n\n    return true\n  }\n\n  protected getAuthStatusFromToken(): IAuthStatus {\n    return this.transformJwtToken(decode(this.getToken()))\n  }\n}\n","export abstract class CacheService {\n  protected getItem<T>(key: string): T | null {\n    const data = localStorage.getItem(key)\n    if (data != null) {\n      return JSON.parse(data)\n    }\n    return null\n  }\n\n  protected setItem(key: string, data: object | string) {\n    if (typeof data === 'string') {\n      localStorage.setItem(key, data)\n    }\n    localStorage.setItem(key, JSON.stringify(data))\n  }\n\n  protected removeItem(key: string) {\n    localStorage.removeItem(key)\n  }\n\n  protected clear() {\n    localStorage.clear()\n  }\n}\n","import { HttpErrorResponse } from '@angular/common/http'\nimport { throwError } from 'rxjs'\n\nexport function transformError(error: HttpErrorResponse | string) {\n  let errorMessage = 'An unknown error has occurred'\n  if (typeof error === 'string') {\n    errorMessage = error\n  } else if (error.error instanceof ErrorEvent) {\n    errorMessage = `Error! ${error.error.message}`\n  } else if (error.status) {\n    errorMessage = `Request failed with ${error.status} ${error.statusText}`\n  } else if (error instanceof Error) {\n    errorMessage = error.message\n  }\n  return throwError(errorMessage)\n}\n","import { Component, Inject } from '@angular/core'\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog'\n\n@Component({\n  // prettier-ignore\n  template: `\n    <h2 mat-dialog-title>{{ data.title }}</h2>\n    <mat-dialog-content>\n      <p>{{ data.content }}</p>\n    </mat-dialog-content>\n    <mat-dialog-actions>\n      <span class=\"flex-spacer\"></span>\n      <button mat-button mat-dialog-close *ngIf=\"data.cancelText\">\n        {{ data.cancelText }}\n      </button>\n      <button mat-button mat-button-raised color=\"primary\" [mat-dialog-close]=\"true\"\n        cdkFocusInitial>\n        {{ data.okText }}\n      </button>\n    </mat-dialog-actions>\n  `,\n})\nexport class SimpleDialogComponent {\n  constructor(\n    public dialogRef: MatDialogRef<SimpleDialogComponent, boolean>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n}\n","import { Injectable } from '@angular/core'\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog'\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar'\nimport { Observable } from 'rxjs'\n\nimport { SimpleDialogComponent } from './simple-dialog.component'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UiService {\n  constructor(private snackBar: MatSnackBar, private dialog: MatDialog) {}\n\n  showToast(message: string, action = 'Close', config?: MatSnackBarConfig) {\n    this.snackBar.open(\n      message,\n      action,\n      config || {\n        duration: 7000,\n      }\n    )\n  }\n\n  showDialog(\n    title: string,\n    content: string,\n    okText = 'OK',\n    cancelText?: string,\n    customConfig?: MatDialogConfig\n  ): Observable<boolean> {\n    const dialogRef = this.dialog.open(\n      SimpleDialogComponent,\n      customConfig || {\n        width: '300px',\n        data: { title, content, okText, cancelText },\n      }\n    )\n\n    return dialogRef.afterClosed()\n  }\n}\n","import { Validators } from '@angular/forms'\n\nexport const OptionalTextValidation = [Validators.minLength(2), Validators.maxLength(50)]\nexport const RequiredTextValidation = OptionalTextValidation.concat([Validators.required])\nexport const OneCharValidation = [Validators.minLength(1), Validators.maxLength(1)]\nexport const EmailValidation = [Validators.required, Validators.email]\nexport const PasswordValidation = [\n  Validators.required,\n  Validators.minLength(8),\n  Validators.maxLength(50),\n]\nexport const USAZipCodeValidation = [\n  Validators.required,\n  Validators.pattern(/^\\d{5}(?:[-\\s]\\d{4})?$/),\n]\nexport const USAPhoneNumberValidation = [\n  Validators.required,\n  Validators.pattern(/^\\D?(\\d{3})\\D?\\D?(\\d{3})\\D?(\\d{4})$/),\n]\n","import { EntityMetadataMap } from '@ngrx/data'\n\nconst entityMetadata: EntityMetadataMap = {\n  User: {},\n}\n\nexport const entityConfig = {\n  entityMetadata,\n}\n","import { Component } from '@angular/core'\n\nimport { AuthService } from '../auth/auth.service'\n\n@Component({\n  selector: 'app-home',\n  template: `\n    <div *ngIf=\"(authService.authStatus$ | async)?.isAuthenticated; else doLogin\">\n      <div class=\"mat-display-4\">This is LemonMart! The place where</div>\n      <div class=\"mat-display-4\">\n        You get a lemon, you get a lemon, you get a lemon...\n      </div>\n      <div class=\"mat-display-4\">Everybody gets a lemon.</div>\n    </div>\n    <ng-template #doLogin>\n      <app-login></app-login>\n    </ng-template>\n  `,\n})\nexport class HomeComponent {\n  constructor(public authService: AuthService) {}\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core'\nimport { FormBuilder, FormGroup } from '@angular/forms'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { combineLatest } from 'rxjs'\nimport { catchError, filter, tap } from 'rxjs/operators'\nimport { SubSink } from 'subsink'\n\nimport { environment } from '../../environments/environment'\nimport { AuthMode, Role } from '../auth/auth.enum'\nimport { AuthService } from '../auth/auth.service'\nimport { UiService } from '../common/ui.service'\nimport { EmailValidation, PasswordValidation } from '../common/validations'\n\n@Component({\n  selector: 'app-login',\n  templateUrl: 'login.component.html',\n  styles: [\n    `\n      .error {\n        color: red;\n      }\n    `,\n    `\n      div[fxLayout] {\n        margin-top: 32px;\n      }\n    `,\n  ],\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  private subs = new SubSink()\n  loginForm!: FormGroup\n  loginError = ''\n  redirectUrl!: string\n  roles = Object.keys(Role)\n  authMode = environment.authMode\n  AuthMode = AuthMode\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    route: ActivatedRoute,\n    private uiService: UiService\n  ) {\n    this.subs.sink = route.paramMap.subscribe(\n      (params) => (this.redirectUrl = params.get('redirectUrl') ?? '')\n    )\n  }\n\n  ngOnInit() {\n    this.authService.logout()\n    this.buildLoginForm()\n  }\n\n  ngOnDestroy(): void {\n    this.subs.unsubscribe()\n  }\n\n  buildLoginForm() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', EmailValidation],\n      password: ['', PasswordValidation],\n    })\n  }\n\n  async login(submittedForm: FormGroup) {\n    this.authService\n      .login(submittedForm.value.email, submittedForm.value.password)\n      .pipe(catchError((err) => (this.loginError = err)))\n\n    this.subs.sink = combineLatest([\n      this.authService.authStatus$,\n      this.authService.currentUser$,\n    ])\n      .pipe(\n        filter(([authStatus, user]) => authStatus.isAuthenticated && user?._id !== ''),\n        tap(([authStatus, user]) => {\n          this.uiService.showToast(`Welcome ${user.fullName}! Role: ${user.role}`)\n          this.router.navigate([\n            this.redirectUrl || this.homeRoutePerRole(user.role as Role),\n          ])\n        })\n      )\n      .subscribe()\n  }\n\n  private homeRoutePerRole(role: Role) {\n    switch (role) {\n      case Role.Cashier:\n        return '/pos'\n      case Role.Clerk:\n        return '/inventory'\n      case Role.Manager:\n        return '/manager'\n      default:\n        return '/user/profile'\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core'\n\n@Component({\n  selector: 'app-navigation-menu',\n  styles: [\n    `\n      .active-link {\n        font-weight: bold;\n        border-left: 3px solid green;\n      }\n    `,\n  ],\n  template: `\n    <mat-nav-list>\n      <h3 matSubheader>Manager</h3>\n      <a mat-list-item routerLinkActive=\"active-link\" routerLink=\"/manager/users\">\n        Users\n      </a>\n      <a mat-list-item routerLinkActive=\"active-link\" routerLink=\"/manager/receipts\">\n        Receipts\n      </a>\n      <h3 matSubheader>Inventory</h3>\n      <a mat-list-item routerLinkActive=\"active-link\" routerLink=\"/inventory/stock-entry\">\n        Stock Entry\n      </a>\n      <a mat-list-item routerLinkActive=\"active-link\" routerLink=\"/inventory/products\">\n        Products\n      </a>\n      <a mat-list-item routerLinkActive=\"active-link\" routerLink=\"/inventory/categories\">\n        Categories\n      </a>\n      <h3 matSubheader>Clerk</h3>\n      <a mat-list-item routerLinkActive=\"active-link\" routerLink=\"/pos\">POS</a>\n    </mat-nav-list>\n  `,\n})\nexport class NavigationMenuComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnInit } from '@angular/core'\n\n@Component({\n  selector: 'app-page-not-found',\n  template: `\n    <p>\n      This page doesn't exist. Go back to\n      <a routerLink=\"/home\">home</a>\n      .\n    </p>\n  `,\n})\nexport class PageNotFoundComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { ElementRef, Input, OnChanges, OnDestroy, SimpleChanges } from '@angular/core'\nimport { Directive } from '@angular/core'\nimport { AbstractControl } from '@angular/forms'\nimport { Subscription } from 'rxjs'\nimport { filter, tap } from 'rxjs/operators'\n\nexport type ValidationError = 'required' | 'minlength' | 'maxlength' | 'invalid'\n\nexport const ErrorSets: { [key: string]: ValidationError[] } = {\n  OptionalText: ['minlength', 'maxlength'],\n  RequiredText: ['minlength', 'maxlength', 'required'],\n}\n\n@Directive({\n  selector: '[appFieldError]',\n})\nexport class FieldErrorDirective implements OnDestroy, OnChanges {\n  @Input() appFieldError!:\n    | ValidationError\n    | ValidationError[]\n    | { error: ValidationError; message: string }\n    | { error: ValidationError; message: string }[]\n  @Input() input: HTMLInputElement | undefined\n  @Input() group!: AbstractControl | null\n\n  @Input() fieldControl!: AbstractControl | null\n  @Input() fieldLabel: string | undefined\n\n  private controlSubscription: Subscription | undefined\n\n  private readonly nativeElement: HTMLElement\n\n  constructor(private el: ElementRef) {\n    this.nativeElement = this.el.nativeElement\n  }\n\n  initFieldControl() {\n    if (this.input && this.group) {\n      const controlName = this.input.getAttribute('formControlName') ?? ''\n\n      this.fieldControl = this.fieldControl || this.group.get(controlName)\n\n      if (!this.fieldControl) {\n        throw new Error(`[appFieldError] couldn't bind to control ${controlName}`)\n      }\n\n      this.unsubscribe()\n\n      this.controlSubscription = this.fieldControl?.valueChanges\n        .pipe(\n          filter(() => this.fieldControl?.status === 'INVALID'),\n          tap(() => this.updateErrorMessage())\n        )\n        .subscribe()\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.initFieldControl()\n\n    if (changes.input.firstChange) {\n      if (this.input) {\n        this.input.onblur = () => this.updateErrorMessage()\n        this.fieldLabel =\n          this.fieldLabel ||\n          this.input.placeholder ||\n          this.input.getAttribute('aria-label') ||\n          ''\n      } else {\n        throw new Error(`appFieldError.[input] couldn't bind to any input element`)\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribe()\n  }\n\n  unsubscribe(): void {\n    this.controlSubscription?.unsubscribe()\n  }\n\n  updateErrorMessage() {\n    const errorsToDisplay: string[] = []\n\n    const errors = Array.isArray(this.appFieldError)\n      ? this.appFieldError\n      : [this.appFieldError]\n\n    errors.forEach(\n      (error: ValidationError | { error: ValidationError; message: string }) => {\n        const errorCode = typeof error === 'object' ? error.error : error\n        const message =\n          typeof error === 'object'\n            ? () => error.message\n            : () => this.getStandardErrorMessage(errorCode)\n        const errorChecker =\n          errorCode === 'invalid'\n            ? () => this.fieldControl?.invalid\n            : () => this.fieldControl?.hasError(errorCode)\n\n        if (errorChecker()) {\n          errorsToDisplay.push(message())\n        }\n      }\n    )\n\n    this.renderErrors(errorsToDisplay.join('<br>'))\n  }\n\n  renderErrors(errors: string) {\n    this.nativeElement.innerHTML = errors\n  }\n\n  getStandardErrorMessage(error: ValidationError): string {\n    const label = this.fieldLabel || 'Input'\n\n    switch (error) {\n      case 'required':\n        return `${label} is required`\n      case 'minlength':\n        return `${label} must be at least ${\n          this.fieldControl?.getError(error)?.requiredLength ?? 2\n        } characters`\n      case 'maxlength':\n        return `${label} can\\'t exceed ${\n          this.fieldControl?.getError(error)?.requiredLength ?? 50\n        } characters`\n      case 'invalid':\n        return `A valid ${label} is required`\n    }\n  }\n}\n","import { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\nimport { ReactiveFormsModule } from '@angular/forms'\n\nimport { FieldErrorDirective } from './field-error.directive'\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule],\n  declarations: [FieldErrorDirective],\n  exports: [FieldErrorDirective],\n})\nexport class FieldErrorModule {}\n","import { Role } from '../../auth/auth.enum'\n\nexport interface IName {\n  first: string\n  middle?: string\n  last: string\n}\n\nexport enum PhoneType {\n  None = 'none',\n  Mobile = 'mobile',\n  Home = 'home',\n  Work = 'work',\n}\n\nexport interface IPhone {\n  type: PhoneType\n  digits: string\n  id: number\n}\n\nexport interface IUser {\n  _id: string\n  email: string\n  name: IName\n  picture: string\n  role: Role | string\n  userStatus: boolean\n  dateOfBirth: Date | null | string\n  level: number\n  address: {\n    line1: string\n    line2?: string\n    city: string\n    state: string\n    zip: string\n  }\n  phones: IPhone[]\n  readonly fullName?: string\n}\n\nexport class User implements IUser {\n  constructor(\n    // tslint:disable-next-line: variable-name\n    public _id = '',\n    public email = '',\n    public name = { first: '', middle: '', last: '' } as IName,\n    public picture = '',\n    public role = Role.None,\n    public dateOfBirth: Date | null = null,\n    public userStatus = false,\n    public level = 0,\n    public address = {\n      line1: '',\n      city: '',\n      state: '',\n      zip: '',\n    },\n    public phones: IPhone[] = []\n  ) {}\n\n  static Build(user: IUser) {\n    if (!user) {\n      return new User()\n    }\n\n    if (typeof user.dateOfBirth === 'string') {\n      user.dateOfBirth = new Date(user.dateOfBirth)\n    }\n\n    return new User(\n      user._id,\n      user.email,\n      user.name,\n      user.picture,\n      user.role as Role,\n      user.dateOfBirth,\n      user.userStatus,\n      user.level,\n      user.address,\n      user.phones\n    )\n  }\n\n  public get fullName(): string {\n    if (!this.name) {\n      return ''\n    }\n\n    if (this.name.middle) {\n      return `${this.name.first} ${this.name.middle} ${this.name.last}`\n    }\n    return `${this.name.first} ${this.name.last}`\n  }\n\n  toJSON(): object {\n    const serialized = Object.assign(this)\n    delete serialized._id\n    delete serialized.fullName\n    return serialized\n  }\n}\n","import { AuthMode } from '../app/auth/auth.enum'\n\n// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`,\n// but if you do `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'http://localhost:3000',\n  authMode: AuthMode.Firebase,\n  firebase: {\n    apiKey: 'AIzaSyA_39OnkusNS7WeMqTuhRosonMV20WntcA',\n    authDomain: 'lemon-mart-007.firebaseapp.com',\n    databaseURL: 'https://lemon-mart-007.firebaseio.com',\n    projectId: 'lemon-mart-007',\n    storageBucket: '',\n    messagingSenderId: '416892066612',\n    appId: '1:416892066612:web:ec2f404c18fd4bd8',\n  },\n}\n","import { enableProdMode } from '@angular/core'\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic'\n\nimport { AppModule } from './app/app.module'\nimport { environment } from './environments/environment'\n\nif (environment.production) {\n  enableProdMode()\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.log(err))\n","export default \"\\n      .active-link {\\n        font-weight: bold;\\n        border-left: 3px solid green;\\n      }\\n    \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5hdmlnYXRpb24tbWVudS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtNQUNNO1FBQ0UsaUJBQWlCO1FBQ2pCLDRCQUE0QjtNQUM5QiIsImZpbGUiOiJuYXZpZ2F0aW9uLW1lbnUuY29tcG9uZW50LnRzIiwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgICAuYWN0aXZlLWxpbmsge1xuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgYm9yZGVyLWxlZnQ6IDNweCBzb2xpZCBncmVlbjtcbiAgICAgIH1cbiAgICAiXX0= */\";","export default \"\\n      .app-container {\\n        display: flex;\\n        flex-direction: column;\\n        position: absolute;\\n        top: 0;\\n        bottom: 0;\\n        left: 0;\\n        right: 0;\\n      }\\n      .app-is-mobile .app-toolbar {\\n        position: fixed;\\n        z-index: 2;\\n      }\\n      .app-sidenav-container {\\n        flex: 1;\\n      }\\n      .app-is-mobile .app-sidenav-container {\\n        flex: 1 0 auto;\\n      }\\n      mat-sidenav {\\n        width: 200px;\\n      }\\n      .image-cropper {\\n        width: 40px;\\n        height: 40px;\\n        position: relative;\\n        overflow: hidden;\\n        border-radius: 50%;\\n        margin-top: -8px;\\n      }\\n    \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtNQUNNO1FBQ0UsYUFBYTtRQUNiLHNCQUFzQjtRQUN0QixrQkFBa0I7UUFDbEIsTUFBTTtRQUNOLFNBQVM7UUFDVCxPQUFPO1FBQ1AsUUFBUTtNQUNWO01BQ0E7UUFDRSxlQUFlO1FBQ2YsVUFBVTtNQUNaO01BQ0E7UUFDRSxPQUFPO01BQ1Q7TUFDQTtRQUNFLGNBQWM7TUFDaEI7TUFDQTtRQUNFLFlBQVk7TUFDZDtNQUNBO1FBQ0UsV0FBVztRQUNYLFlBQVk7UUFDWixrQkFBa0I7UUFDbEIsZ0JBQWdCO1FBQ2hCLGtCQUFrQjtRQUNsQixnQkFBZ0I7TUFDbEIiLCJmaWxlIjoiYXBwLmNvbXBvbmVudC50cyIsInNvdXJjZXNDb250ZW50IjpbIlxuICAgICAgLmFwcC1jb250YWluZXIge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICByaWdodDogMDtcbiAgICAgIH1cbiAgICAgIC5hcHAtaXMtbW9iaWxlIC5hcHAtdG9vbGJhciB7XG4gICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgei1pbmRleDogMjtcbiAgICAgIH1cbiAgICAgIC5hcHAtc2lkZW5hdi1jb250YWluZXIge1xuICAgICAgICBmbGV4OiAxO1xuICAgICAgfVxuICAgICAgLmFwcC1pcy1tb2JpbGUgLmFwcC1zaWRlbmF2LWNvbnRhaW5lciB7XG4gICAgICAgIGZsZXg6IDEgMCBhdXRvO1xuICAgICAgfVxuICAgICAgbWF0LXNpZGVuYXYge1xuICAgICAgICB3aWR0aDogMjAwcHg7XG4gICAgICB9XG4gICAgICAuaW1hZ2UtY3JvcHBlciB7XG4gICAgICAgIHdpZHRoOiA0MHB4O1xuICAgICAgICBoZWlnaHQ6IDQwcHg7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgICAgICBtYXJnaW4tdG9wOiAtOHB4O1xuICAgICAgfVxuICAgICJdfQ== */\";","export default \"\\n      .error {\\n        color: red;\\n      }\\n    \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO01BQ007UUFDRSxVQUFVO01BQ1oiLCJmaWxlIjoibG9naW4uY29tcG9uZW50LnRzIiwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgICAuZXJyb3Ige1xuICAgICAgICBjb2xvcjogcmVkO1xuICAgICAgfVxuICAgICJdfQ== */\";","export default \"\\n      div[fxLayout] {\\n        margin-top: 32px;\\n      }\\n    \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO01BQ007UUFDRSxnQkFBZ0I7TUFDbEIiLCJmaWxlIjoibG9naW4uY29tcG9uZW50LnRzIiwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgICBkaXZbZnhMYXlvdXRdIHtcbiAgICAgICAgbWFyZ2luLXRvcDogMzJweDtcbiAgICAgIH1cbiAgICAiXX0= */\";","export default \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\">\\n  <mat-card fxFlex=\\\"400px\\\">\\n    <mat-card-header>\\n      <mat-card-title>\\n        <div class=\\\"mat-headline\\\">Hello, Limoncu!</div>\\n      </mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n      <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login(loginForm)\\\" fxLayout=\\\"column\\\">\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"10px\\\">\\n          <mat-icon>email</mat-icon>\\n          <mat-form-field fxFlex>\\n            <input matInput placeholder=\\\"E-mail\\\" aria-label=\\\"E-mail\\\"\\n              formControlName=\\\"email\\\" #email />\\n            <mat-error [input]=\\\"email\\\" [group]=\\\"loginForm\\\" appFieldError=\\\"invalid\\\">\\n            </mat-error>\\n          </mat-form-field>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"10px\\\">\\n          <mat-icon matPrefix>vpn_key</mat-icon>\\n          <mat-form-field fxFlex>\\n            <input matInput placeholder=\\\"Password\\\" aria-label=\\\"Password\\\" type=\\\"password\\\"\\n              formControlName=\\\"password\\\" #password />\\n            <mat-hint>Minimum 8 characters</mat-hint>\\n            <mat-error [input]=\\\"password\\\" [group]=\\\"loginForm\\\"\\n              [appFieldError]=\\\"['required', 'minlength', 'maxlength']\\\">\\n            </mat-error>\\n          </mat-form-field>\\n        </div>\\n        <div fxLayout=\\\"row\\\" class=\\\"margin-top\\\">\\n          <div *ngIf=\\\"loginError\\\" class=\\\"mat-caption error\\\">{{ loginError }}</div>\\n          <div class=\\\"flex-spacer\\\"></div>\\n          <button mat-raised-button type=\\\"submit\\\" color=\\\"primary\\\"\\n            [disabled]=\\\"loginForm.invalid\\\">\\n            Login\\n          </button>\\n        </div>\\n      </form>\\n    </mat-card-content>\\n    <mat-card-content>\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"10px\\\">\\n        <span>Authentication Mode: </span><i>{{ authMode }}</i>\\n      </div>\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"10px\\\"\\n        *ngIf=\\\"authMode !== AuthMode.InMemory\\\">\\n        <span>Demo Credentials: </span><button mat-button\\n          (click)=\\\"this.loginForm.patchValue({ email: 'duluca@gmail.com', password: 'l0l1pop!!' })\\\">Fill</button>\\n      </div>\\n      <mat-accordion *ngIf=\\\"authMode === AuthMode.InMemory\\\">\\n        <mat-expansion-panel>\\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n              Fake Login Info\\n            </mat-panel-title>\\n          </mat-expansion-panel-header>\\n          <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"48px\\\" role=\\\"list\\\">\\n            <mat-grid-tile [colspan]=\\\"3\\\" role=\\\"listitem\\\" style=\\\"background: pink\\\">\\n              Use any 8 character string as password\\n            </mat-grid-tile>\\n            <mat-grid-tile>\\n              <mat-grid-tile-header>Role</mat-grid-tile-header>\\n            </mat-grid-tile>\\n            <mat-grid-tile [colspan]=\\\"2\\\">\\n              <mat-grid-tile-header>E-mail</mat-grid-tile-header>\\n            </mat-grid-tile>\\n            <div *ngFor=\\\"let role of roles; odd as oddRow\\\">\\n              <mat-grid-tile role=\\\"listitem\\\"\\n                [style.background]=\\\"oddRow ? 'lightGray': 'white'\\\">\\n                {{role}}\\n              </mat-grid-tile>\\n              <mat-grid-tile [colspan]=\\\"2\\\" role=\\\"listitem\\\"\\n                [style.background]=\\\"oddRow ? 'lightGray': 'white'\\\">\\n                <div fxFlex fxLayoutAlign=\\\"end center\\\">\\n                  <div *ngIf=\\\"role.toLowerCase() === 'none'; else otherRoles\\\">\\n                    Any @test.com email\\n                  </div>\\n                  <ng-template #otherRoles>{{role.toLowerCase()}}@test.com</ng-template>\\n                  <button mat-button (click)=\\\"\\n                      this.loginForm.patchValue(\\n                        { email: role.toLowerCase() + '@test.com', password: 'whatever' }\\n                      )\\\">\\n                    Fill\\n                  </button>\\n                </div>\\n              </mat-grid-tile>\\n            </div>\\n          </mat-grid-list>\\n        </mat-expansion-panel>\\n      </mat-accordion>\\n    </mat-card-content>\\n  </mat-card>\\n</div>\\n\";"],"sourceRoot":"webpack:///"}